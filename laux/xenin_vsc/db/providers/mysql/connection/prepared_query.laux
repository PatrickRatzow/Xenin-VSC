public class XeninVSC.MySQL.PreparedQuery
    public constructor(conn, query)
        self.conn = conn
        self.rawQuery = query
        self.query = self.conn:prepare(query)
    end

    public getRaw()
        return self.query
    end

    public setString(id, value)
        self.query:setString(id, value)
    end

    public setNumber(id, value)
        self.query:setNumber(id, value)
    end

    public start()
        local p = XeninUI.Promises.new()

        self.query.onSuccess = (q, data) =>
            p:resolve(XeninVSC.QueryResult({
                data = data,
                lastInsert = q:lastInsert(),
                affectedRows = q:affectedRows()
            }))
        end
        self.query.onError = (q, err) =>
            p:reject(err)
        end
        self.query:start()

        return p
    end
end